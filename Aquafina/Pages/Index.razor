@page "/"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Charts

@*@inject NavigationManager NavigationManager
@inherits SampleBaseComponent;*@
<div class="control-section" align='center'>
    <SfChart ID="chart" Title="Thông kê nhiệt độ các tỉnh thành trong tháng 5-2022" Width="@Width" Theme="@Theme">
        <ChartEvents Loaded="ChartLoaded" OnLegendClick="OnChartLegendClick"></ChartEvents>
        <ChartArea><ChartAreaBorder Width="0"></ChartAreaBorder></ChartArea>
        <ChartPrimaryXAxis ValueType="Syncfusion.Blazor.Charts.ValueType.Category" Interval="1" LabelIntersectAction="LabelIntersectAction.Rotate90">
            <ChartAxisMajorGridLines Width="0"></ChartAxisMajorGridLines>
        </ChartPrimaryXAxis>
        <ChartPrimaryYAxis LabelFormat="{value}°C">
            <ChartAxisLineStyle Width="0"></ChartAxisLineStyle>
            <ChartAxisMajorTickLines Width="0"></ChartAxisMajorTickLines>
        </ChartPrimaryYAxis>
        <ChartTooltipSettings Enable="true"></ChartTooltipSettings>
        <ChartLegendSettings EnableHighlight="false"></ChartLegendSettings>
        <ChartSeriesCollection>
            <ChartSeries DataSource="@SplineData" Name="Nhiệt độ cao nhất" XName="TinhThanh" Width="2"
                         Opacity="1" YName="MaxTemp" Type="ChartSeriesType.Spline">
                <ChartMarker Visible="true" Width="7" Height="7">
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@SplineData" Name="Nhiệt độ trung bình" XName="TinhThanh" Width="2"
                         Opacity="1" YName="AvgTemp" Type="ChartSeriesType.Spline">
                <ChartMarker Visible="true" Width="7" Height="7">
                </ChartMarker>
            </ChartSeries>
            <ChartSeries DataSource="@SplineData" Name="Nhiệt độ thấp nhất" XName="TinhThanh" Width="2"
                         Opacity="1" YName="MinTemp" Type="ChartSeriesType.Spline">
                <ChartMarker Visible="true" Width="7" Height="7">
                </ChartMarker>
            </ChartSeries>
        </ChartSeriesCollection>
       
    </SfChart>
</div>

@code{
    public string Sunday = "Sun";
    private Theme Theme { get; set; }
    public string Width { get; set; } = "90%";
    public List<SplineChartData> SplineData = new List<SplineChartData>
{
        new SplineChartData { TinhThanh= "Hà Nội", MaxTemp = 32, AvgTemp = 23, MinTemp = 17 },
        new SplineChartData { TinhThanh = "Vinh", MaxTemp = 34, AvgTemp = 25, MinTemp = 17 },
        new SplineChartData { TinhThanh = "Huế", MaxTemp = 36, AvgTemp = 27, MinTemp = 20 },
        new SplineChartData { TinhThanh = "Đà Nẵng", MaxTemp = 35, AvgTemp = 26, MinTemp = 19 },
        new SplineChartData { TinhThanh = "Nha Trang", MaxTemp = 30, AvgTemp = 24, MinTemp = 19 },
        new SplineChartData { TinhThanh = "Hồ Chí Minh", MaxTemp = 34, AvgTemp = 27, MinTemp = 21 },
        new SplineChartData { TinhThanh = "Cà Mau", MaxTemp = 32, AvgTemp = 25, MinTemp = 18 }
    };
    public List<AnnotationData> SplineAnnotations = new List<AnnotationData> {
        new AnnotationData() { Visible = true, Url = "images/chart/cloud.png", X = "Sun", Y = "5" },
        new AnnotationData() { Visible = true, Url = "images/chart/sunny.png", X = "Tue", Y = "35" },
    };
    public async void ChartLoaded(LoadedEventArgs args)
    {
        SplineAnnotations.ForEach(item => item.Visible = true);
        await Task.Delay(1500);
        StateHasChanged();
    }
    public void OnChartLegendClick(LegendClickEventArgs args)
    {
        if (args.LegendText == "Max Temp")
        {
            SplineAnnotations[1].Visible = !SplineAnnotations[1].Visible;
        } else if (args.LegendText == "Min Temp")
        {
            SplineAnnotations[0].Visible = !SplineAnnotations[0].Visible;
        }
        StateHasChanged();
    }
    //protected override void OnInitialized()
    //{
    //    Theme = ThemeHelper.GetCurrentTheme(NavigationManager.Uri);
    //}

    //protected override void OnAfterRender(bool firstRender)
    //{
    //    base.OnAfterRender(firstRender);
    //    if(firstRender) {
    //        if (SampleService.IsDevice)
    //        {
    //             Width = "100%";
    //             StateHasChanged();
    //        }
    //    }
    //}

    public class SplineChartData
    {
        public string TinhThanh { get; set; }
        public double MaxTemp { get; set; }
        public double AvgTemp { get; set; }
        public double MinTemp { get; set; }
    }
    public class AnnotationData
    {
        public string X { get; set; }
        public string Y { get; set; }
        public string Url { get; set; }
        public bool Visible { get; set; }
    }
}
